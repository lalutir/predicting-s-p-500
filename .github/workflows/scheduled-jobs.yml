name: Run main.py Daily

on:
  schedule: 
    - cron: '0 6 * * *'
  workflow_dispatch:  # Allows manual execution

permissions:
  contents: write

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Python Environment
        uses: actions/cache@v3
        with:
          path: ~/.venv  # Caches the virtual environment
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-


      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.1'

      - name: Create and Activate Virtual Environment
        run: |
          python -m venv ~/.venv
          source ~/.venv/bin/activate
          pip install --upgrade pip

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          source ~/.venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Script and Generate Output with UTF-8 Encoding
        run: |
          source ~/.venv/bin/activate
          cd Code
          python main.py > output.txt 2>&1 || (cat output.txt && exit 1)
        env:
          API_KEY: ${{ secrets.API_KEY }}

      - name: Commit File Changes
        run: |
          git config --global user.name 'lalutir'
          git config --global user.email ${{ secrets.EMAIL_COMMIT }}
          git stash
          git pull origin main --rebase
          git add .
          git commit -m 'commit modified files after automatic run'
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Read Output Content
        id: read_output
        run: echo "OUTPUT_CONTENT<<EOF" >> $GITHUB_ENV && cat Code/output.txt >> $GITHUB_ENV && echo "EOF" >> $GITHUB_ENV

      - name: Find Latest Visualization
        id: find_plot
        run: echo "LATEST_PLOT=$(ls -t Code/Visualizations/Prediction_graph_*.png | head -1)" >> $GITHUB_ENV

      - name: Set Date
        id: set_date
        run: echo "CURRENT_DATE=$(date +'%d-%m-%Y')" >> $GITHUB_ENV

      - name: Send Email with Attachment
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "ðŸ“Š S&P500 Predictions Daily Report: ${{ env.CURRENT_DATE }}"
          body: |
                Hello, 
                Here is the daily report for the S&P500 predictions for ${{ env.CURRENT_DATE }}.

                ðŸ“Ž Attachments:
                ðŸ“„ output.txt (Full output)
                ðŸ“ˆ Prediction Graph (Visualization)
                
                Best,
                Automated Report System ðŸ¤–
          from: "Automated Report System <${{ secrets.EMAIL }}>"
          bcc: ${{ vars.EMAIL_BCC }}
          attachments: Code/output.txt, ${{ env.LATEST_PLOT }}
